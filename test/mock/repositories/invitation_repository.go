// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repositories/invitation_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	entity "hukum-onlen-go/entity"
)

// MockIInvitationRepository is a mock of IInvitationRepository interface.
type MockIInvitationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIInvitationRepositoryMockRecorder
}

// MockIInvitationRepositoryMockRecorder is the mock recorder for MockIInvitationRepository.
type MockIInvitationRepositoryMockRecorder struct {
	mock *MockIInvitationRepository
}

// NewMockIInvitationRepository creates a new mock instance.
func NewMockIInvitationRepository(ctrl *gomock.Controller) *MockIInvitationRepository {
	mock := &MockIInvitationRepository{ctrl: ctrl}
	mock.recorder = &MockIInvitationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInvitationRepository) EXPECT() *MockIInvitationRepositoryMockRecorder {
	return m.recorder
}

// CreateInvitations mocks base method.
func (m *MockIInvitationRepository) CreateInvitations(ctx context.Context, invitations []*entity.Invitation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInvitations", ctx, invitations)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInvitations indicates an expected call of CreateInvitations.
func (mr *MockIInvitationRepositoryMockRecorder) CreateInvitations(ctx, invitations interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvitations", reflect.TypeOf((*MockIInvitationRepository)(nil).CreateInvitations), ctx, invitations)
}
